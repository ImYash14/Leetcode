ANS1-----------------------

class Solution {
public:
     int areaOfMaxDiagonal(std::vector<std::vector<int>>& dimensions) {
        int maxDiagonalIndex = -1;
        double maxDiagonal = 0.0;
        double maxArea = 0.0;

        for (int i = 0; i < dimensions.size(); ++i) {
            int length = dimensions[i][0];
            int width = dimensions[i][1];
            double diagonal = std::sqrt(length * length + width * width);

            if (diagonal > maxDiagonal || (diagonal == maxDiagonal && length * width > maxArea)) {
                maxDiagonal = diagonal;
                maxDiagonalIndex = i;
                maxArea = length * width;
            }
        }

        return static_cast<int>(maxArea);
    }
};


ANS2-------------------------------

class Solution {
public:
    int minMovesToCaptureTheQueen(int a, int b, int c, int d, int e, int f) {
        int ans =2;
        int p=a, q=b;
        
        while(p<=8){
            if(p==c && b==d)
                break;
            if(p==e && b==f)
                return 1;
            p++;
        }
        p=a , q=b;
        while(p>=0){
            if(p==c && b==f)
                break;
            if(p==e && b==f)
                return 1;
            p--;
        }
        p=a , q=b;
        while(q<9){
            if(a==c && q==d)
                break;
            if(a==e && q==f)
                return 1;
            q++;
        }
        p=a , q=b;
        while(q>=0){
            if(a==c && q==d)
                break;
            if(a==e && q==f)
                return 1;
            q--;
        }
        int x =c , y =d;
        while(x>=0 && y>=0){
            if(x==a && y==b)
                break;
            if(x==e && y==f)
                return 1;
            x--; y--;
        }
         x =c , y =d;
        while(x>=0 && y>=0){
            if(x==a && y==b)
                break;
            if(x==e && y==f)
                return 1;
            x--; y++;
        }
         x =c , y =d;
        while(x<=8 && y>=0){
            if(x==a && y==b)
                break;
            if(x==e && y==f)
                return 1;
            x++; y--;
        }
         x =c , y =d;
        while(x<=8 && y>=0){
            if(x==a && y==b)
                break;
            if(x==e && y==f)
                return 1;
            x++; y++;
        }
        return ans;
    }
};
