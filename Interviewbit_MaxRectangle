int Solution::maximalRectangle(vector<vector<int> > &A) {
    if (A.empty() || A[0].empty()) {
        return 0;
    }

    int rows = A.size();
    int cols = A[0].size();
    vector<vector<int>> height(rows, vector<int>(cols, 0));
    
    // Calculate the height of each bar in each column
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            if (A[i][j] == 1) {
                height[i][j] = (i == 0) ? 1 : height[i - 1][j] + 1;
            }
        }
    }

    int maxArea = 0;

    for (int i = 0; i < rows; ++i) {
        stack<int> s;
        for (int j = 0; j <= cols; ++j) {
            int h = (j == cols) ? 0 : height[i][j];
            while (!s.empty() && h < height[i][s.top()]) {
                int heightIndex = s.top();
                s.pop();
                int width = (s.empty() ? j : j - s.top() - 1);
                maxArea = max(maxArea, height[i][heightIndex] * width);
            }
            s.push(j);
        }
    }

    return maxArea;
}
